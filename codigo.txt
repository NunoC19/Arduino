#include <ArduinoWiFiServer.h>
#include <BearSSLHelpers.h>
#include <CertStoreBearSSL.h>
#include <ESP8266WiFi.h>
#include <ESP8266WiFiAP.h>
#include <ESP8266WiFiGeneric.h>
#include <ESP8266WiFiGratuitous.h>
#include <ESP8266WiFiMulti.h>
#include <ESP8266WiFiScan.h>
#include <ESP8266WiFiSTA.h>
#include <ESP8266WiFiType.h>
#include <WiFiClient.h>
#include <WiFiClientSecure.h>
#include <WiFiClientSecureBearSSL.h>
#include <WiFiServer.h>
#include <WiFiServerSecure.h>
#include <WiFiServerSecureBearSSL.h>
#include <WiFiUdp.h> 
#include <ArduinoJson.h>
#include <ESP8266HTTPClient.h>
#include <Adafruit_Sensor.h>
#include <DHT.h>
#include <DHT_U.h>


#define DHTPIN D6
#define DHTTYPE DHT22

 
//dados de autenticação na rede wifi

const char* ssid = "ENTAWiFi";
const char* password = "ENTAWiFi";

DHT dht(DHTPIN, DHTTYPE);

float temperatura = 0;
float humidade = 0;


void setup() {
  Serial.begin(115200);
  //pinMode(6,OUTPUT);
  //digitalWrite(6,LOW);
  dht.begin();
  WiFiServer server(80);
  delay(10);
  //Connect to WiFi network
  Serial.print("Connecting to WIFI");
  Serial.println(ssid);
  WiFi.begin(ssid, password);
  while (WiFi.status() != WL_CONNECTED) {
     delay(500);
     Serial.print(".");
  }
  Serial.println("");
  Serial.println("WiFi connected");
  //Start the server
  server.begin();
  Serial.println("Server started");
  // Print the IP address
  Serial.print("Use this URL to connect: ");
  Serial.print(WiFi.localIP());
  Serial.println("/");
}

void loop() {
  temperatura = dht.readTemperature();
  humidade = dht.readHumidity();
  if(isnan(temperatura) ||isnan(tumidade))
  {
    Serial.println("falha ao ler o DHT");
    return;
  }
  //Serial.print("Humidade:  %");
  //Serial.println(Humidade);
  //Serial.print("Temperatura: ºC");
  //Serial.println(Temperatura);
  if(Temperatura >= 22) {
    Serial.println("Refrigeracao Ativada");
  }
  if(Temperatura < 21){
    Serial.println("Refrigeracao Desativada");
  }   
  StaticJsonDocument<300> doc;
  doc["idArduino"] = "Ard-13";
  doc["temp"] = (int)temperatura;
  doc["hum"] = (int)humidade;
  String json;
  serializeJson(doc,json);
  serializeJsonPretty(doc, Serial);
  Serial.println("");
  
  WiFiClientSecure client;
  client.setInsecure();
  HTTPClient http;
  http.begin(client,"https://regulafrigo.herokuapp.com/update");
  http.addHeader("Content-Type", "application/json");
  http.POST(json);
  Serial.print(http.getString());
  Serial.println();
  //Disconnect client
  http.end();
  delay(2000);
}
